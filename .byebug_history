continue
Continue
continue
@employee.errors.add(@user.errors)
@employee.errors.add(@user.errors.)
@employee.errors.add(@user.errors.messages.to_a[1])
@employee.errors.add(@user.errors.messages)
@employee.errors.add(@user.errors.messages.to_a)
@employee.errors.add(@user.errors.messages)
@employee.errors.add(@user.errors.to_s)
@employee.errors.add(@user.errors)
@employee.error.add
@employee.errors.methods.add(@user.errors)
@employee.errors.methods
@employee.errors
next
continue
@user.errors.messages.merge(:message => "jajaja")
@user.errors.messages.to_a
@user.errors.messages.append(:message => "jajaja")
@user.errors.messages.to_array
@user.errors.messages.to_param
@user.errors.messages.to_array
@user.errors.messages.methods
@user.errors.messages
@user.errors
next
continue
next
@employee.errors
next
@employee.errors
next
continue
@user.errors.messages
@user.errors
@user.error
@user.valid?
@user.valid
@employee.errors.messages
@employee.errors.message
@employee.errors
@employee.valid?
next
!@employee.idCard.nil? && !@employee.fullName.nil? && !@employee.email.nil?
next
continue
next
continue
@user.valid?
@user.valid
next
@user.valid
next
!@employee.idCard.nil? && !@employee.fullName.nil? && !@employee.email.nil?
@employee.email.nil?
@employee.fullName.nil?
@employee.idCard.nil?
@employee
next
continue
newfeedback
continue
newfeedback
continue
@request
continue
@request
continue
@request
current_asked_request
continue
@current_asked_request
continue
session[:request_id]
continue
@request
continue
@request
continue
exit
request[:request_id]
@current_asked_request
continue
@feedback
@request
continue
@feedback
continue
session[:request_id]
request[:request_id]
continue
request.params
request[:request_id]
continue
request[:request_id]
continue
@request
continue
@request != nil
continue
@request
continue
@request
continue
@request
params[:requester_email]
continue
@request != nil
continue
@request != nil
@request
continue
@request
continue
params[:request_number]
continue
@request
continue
@request
continue
@request
continue
Request.where(requester_name: "David", id: 1)
continue
next
continue
Integer(params[:selected_employees_to_add].first)
params[:selected_employees_to_add].first
params[:selected_employees_to_add]
Request.find(params[:request_id])
continue
next
continue
next
continue
next
continue
Integer(@employees.first)
Integer(@employees.first.methods)
@employees.first.methods
@employees.first
@employees.each
@employees.each {|employee| employee.methods}
@employees.each {|employee| employee}
employee
@employees.each {|employee|}
@employees.each
@request.id
@request
Task.where(employee_id: 1, request_id: 2)
Task.where(employee_id: 1, request_id: ")
Task.where(employee_id: 1)
Task.where(employee_id: employee_id)
@employees
next
continue
employee_id
Task.where(employee_id: employee_id, request_id: @request.id)
Task.where(employee_id: employee_id && request_id: @request.id)
Task.where(employee_id: employee_id, request_id: @request.id)
task
next
continue
next
continue
next
continue
next
continue
@request.employees.ids
@request.employees.id
@request.employees
@request = Request.find(3)
continue
cancell
continue
@request.employees
@request = Request.find(3)
continue
next
@request
next
continue
params[:task][:request_id]
params[:task]
params
newfeedback
continue
newfeedback
continue
permitted
newfeedback
continue
newfeedback
feedback_params
continue
feedback_params
continue
newfeedback
continue
newfeedback
continue
newfeedback
continue
newfeedback
feedback_params
continue
feedback_params
continue
feedback_params
continue
feedback_params
continue
feedback_params
continue
feedback_params.keys
params[:satisfaction]
feedback_params[:satisfaction]
continue
feedback_params[:satisfaction]
continue
params[:satisfaction]
feedback_params,keys
continue
feedback_params
params[:satisfaction]
continue
feedback_params
params[:satisfaction]
continue
params[:satisfaction]
feedback_params
continue
feedback_params
continue
feedback_params
continue
feedback_params.keys
continue
feedback_params.keys
continue
feedback_params.keys
continue
feedback_params.keys
continue
feedback_params.keys
continue
feedback_params.keys
params[:feedback]
continue
params[:feedback]
continue
params[:feedback]
continue
params[:feedback]
